{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\uninter\\\\frontend\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../LoginPage.css'; // Ajuste o caminho se necessário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [cpf, setCpf] = useState('');\n  const [isInvalid, setIsInvalid] = useState(false);\n  const handleCpfChange = event => {\n    const originalValue = event.target.value.replace(/\\D/g, '');\n    let formattedValue = '';\n\n    // Aplica a formatação ao valor\n    if (originalValue.length <= 11) {\n      formattedValue = originalValue.replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d{1,2})/, '$1-$2');\n    }\n    setCpf(formattedValue);\n    setIsInvalid(false); // Resetar o estado de validação quando o usuário começa a digitar novamente\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Valida se o CPF está completamente preenchido\n    if (cpf.replace(/\\D/g, '').length !== 11) {\n      setIsInvalid(true);\n    } else {\n      console.log('CPF:', cpf);\n      // Aqui você pode adicionar lógica adicional para quando o CPF estiver correto\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/curitiba-logo.png\",\n      alt: \"Curitiba Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bem vindo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Entre com seus dados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cpf\",\n        placeholder: \"CPF\",\n        value: cpf,\n        onChange: handleCpfChange,\n        className: isInvalid ? 'invalid' : '',\n        maxLength: \"14\" // Limitar caracteres visíveis para 14 (incluindo pontos e hífen)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"birthdate\",\n        placeholder: \"Data de Nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"ACESSAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      children: \"Esqueceu sua senha?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"jPYYBST0YMM5K/6AluNYgxAK/2k=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","cpf","setCpf","isInvalid","setIsInvalid","handleCpfChange","event","originalValue","target","value","replace","formattedValue","length","handleSubmit","preventDefault","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","placeholder","onChange","maxLength","href","_c","$RefreshReg$"],"sources":["C:/temp/uninter/frontend/src/components/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../LoginPage.css'; // Ajuste o caminho se necessário\r\n\r\nfunction LoginPage() {\r\n  const [cpf, setCpf] = useState('');\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n\r\n  const handleCpfChange = (event) => {\r\n    const originalValue = event.target.value.replace(/\\D/g, '');\r\n    let formattedValue = '';\r\n\r\n    // Aplica a formatação ao valor\r\n    if (originalValue.length <= 11) {\r\n      formattedValue = originalValue\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2');\r\n    }\r\n\r\n    setCpf(formattedValue);\r\n    setIsInvalid(false); // Resetar o estado de validação quando o usuário começa a digitar novamente\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Valida se o CPF está completamente preenchido\r\n    if (cpf.replace(/\\D/g, '').length !== 11) {\r\n      setIsInvalid(true);\r\n    } else {\r\n      console.log('CPF:', cpf);\r\n      // Aqui você pode adicionar lógica adicional para quando o CPF estiver correto\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <img src=\"/images/curitiba-logo.png\" alt=\"Curitiba Logo\" className=\"logo\"/>\r\n      <h1>Bem vindo!</h1>\r\n      <p>Entre com seus dados</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          id=\"cpf\"\r\n          placeholder=\"CPF\"\r\n          value={cpf}\r\n          onChange={handleCpfChange}\r\n          className={isInvalid ? 'invalid' : ''}\r\n          maxLength=\"14\" // Limitar caracteres visíveis para 14 (incluindo pontos e hífen)\r\n        />\r\n        <input type=\"text\" id=\"birthdate\" placeholder=\"Data de Nascimento\" />\r\n        <button type=\"submit\">ACESSAR</button>\r\n      </form>\r\n      <a href=\"#\">Esqueceu sua senha?</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}