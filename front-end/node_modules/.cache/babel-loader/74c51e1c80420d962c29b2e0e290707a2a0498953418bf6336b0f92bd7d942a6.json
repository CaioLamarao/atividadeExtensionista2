{"ast":null,"code":"const API_BASE_URL='http://localhost:3301/api/nutrientes';export const fetchUserNutrients=async(age,sexo)=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"?age=\").concat(age,\"&sexo=\").concat(sexo));if(!response.ok){throw new Error('Network response was not ok');}return response.json();}catch(error){console.error('Failed to fetch user nutrients:',error);throw error;// Propagando o erro para ser tratado por quem chama a função\n}};","map":{"version":3,"names":["API_BASE_URL","fetchUserNutrients","age","sexo","response","fetch","concat","ok","Error","json","error","console"],"sources":["C:/temp/Atividade extensionista 2/front-end/src/services/nutrientService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3301/api/nutrientes';\r\n\r\nexport const fetchUserNutrients = async (age, sexo) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}?age=${age}&sexo=${sexo}`);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    } catch (error) {\r\n        console.error('Failed to fetch user nutrients:', error);\r\n        throw error; // Propagando o erro para ser tratado por quem chama a função\r\n    }\r\n};\r\n"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,sCAAsC,CAE3D,MAAO,MAAM,CAAAC,kBAAkB,CAAG,KAAAA,CAAOC,GAAG,CAAEC,IAAI,GAAK,CACnD,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,YAAY,UAAAM,MAAA,CAAQJ,GAAG,WAAAI,MAAA,CAASH,IAAI,CAAE,CAAC,CACvE,GAAI,CAACC,QAAQ,CAACG,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACA,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC1B,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CAAE;AACjB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}